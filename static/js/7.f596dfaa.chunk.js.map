{"version":3,"sources":["app/modules/order/components/NewOrder.tsx","app/modules/order/components/UserTrades.tsx","app/modules/order/Order.tsx"],"names":["initialValue","order_type","bo_account_id","trade_company_id","order_qty","drip_qty","amount","start_rate","end_rate","transaction_type","order_valid_from","order_valid_to","trading_market_id","customer_note","type","NewOrder","useState","data","setData","BoData","setBoData","trade_list","settradeList","trade_Details","settrade_Details","setLoading","seterr","sucessMsg","setsucessMsg","responseErrFields","setresponseErrFields","responseErr","setresponseErr","SuccessData","setSuccessData","Date","value","onChange","customErrForMarket","SetcustomErrForMarket","progress","fetchData","useSpring","width","config","slow","a","BoList","BoLists","statusCode","DataFormateForSelect","bo_accounts","datas","tradeList","trades","trade_companies","console","error","handleSubmit","event","preventDefault","validition","Object","keys","map","collection","key","el","document","getElementsByName","style","border","required","parentElement","name","stopPropagation","tradeBuy","datasCountry","transaction","tradeSell","response","message","fields","nidInput","e","target","quantity","getElementById","rate","parseInt","last_trade_price","nidInputCustom","field_name","trade_details_info","trade_company","customType","el_end","useLayoutEffect","className","onSubmit","noValidate","color","id","onClick","htmlFor","options","defaultValue","readOnly","href","selected","date","length","toUpperCase","replaceAll","collection_2","key_2","category","close_price","high_price","matured_share","SearchBar","Search","UserTrades","UserTradeList","keyField","columns","dataField","text","sort","formatter","row","search","props","searchProps","noDataIndication","bootstrap4","striped","hover","pagination","paginationFactory","baseProps","profileBreadCrumbs","title","path","isSeparator","isActive","Order","element","breadcrumbs","index","to"],"mappings":"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","file":"static/js/7.f596dfaa.chunk.js","sourcesContent":["import {useLayoutEffect, useState} from 'react'\r\nimport DatePicker from 'react-datepicker'\r\nimport Select from 'react-select'\r\nimport TimePicker from 'react-time-picker'\r\nimport {\r\n  BoList,\r\n  bo_account_Create,\r\n  DataFormateForSelect,\r\n  tradeBuy,\r\n  tradeList,\r\n  tradeSell,\r\n  trade_details_info,\r\n} from '../../auth/core/_requests'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { animated, useSpring, config } from \"react-spring\";\r\nimport \"./styles.css\";\r\nimport { ProgressBar } from 'react-bootstrap'\r\n\r\nconst initialValue = {\r\n  order_type: \"\",\r\n  bo_account_id: \"\",\r\n  trade_company_id: \"\",\r\n  order_qty: \"\",\r\n  drip_qty: \"\",\r\n  amount: \"\",\r\n  start_rate: \"\",\r\n  end_rate: \"\",\r\n  transaction_type: \"\",\r\n  order_valid_from: \"\",\r\n  order_valid_to: \"\",\r\n  trading_market_id: \"\",\r\n  customer_note: \"\",\r\n  type:\"Sell\"\r\n}\r\n\r\n\r\n\r\nexport function NewOrder() {\r\n  const [data, setData] = useState<any>(initialValue)\r\n  const [BoData, setBoData] = useState([])\r\n  const [trade_list, settradeList] = useState<any>([])\r\n  const [trade_Details, settrade_Details] = useState<any>([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [err, seterr] = useState('')\r\n  const [sucessMsg, setsucessMsg] = useState('')\r\n  const [responseErrFields, setresponseErrFields] = useState<any>([])\r\n  const [responseErr, setresponseErr] = useState<any>([])\r\n  const [SuccessData, setSuccessData] = useState<any>([])\r\n  const [value, onChange] = useState<any>(new Date())\r\n  const [customErrForMarket, SetcustomErrForMarket] = useState<any>(\"\")\r\n\r\n  const [progress, setProgress] = useState(\"0%\");\r\n  const props = useSpring({ width: progress, config: config.slow });\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const BoLists:any = await BoList()\r\n      if (BoLists.data.statusCode ===200) {\r\n        let datas =  await DataFormateForSelect(BoLists.data.bo_accounts , \"bo_account_id\" , \"account_holder_name\")\r\n        setBoData(datas)\r\n      }\r\n\r\n      const trades:any = await tradeList()\r\n      if (trades.data.statusCode ===200) {\r\n        let datas =  await DataFormateForSelect(trades.data.trade_companies , \"trade_company_id\" , \"tradecode\")\r\n      settradeList(datas)\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n\r\n  const handleSubmit = async(event:any)=>{\r\n    setLoading(false)\r\n    event.preventDefault();\r\n\r\n    let validition :any = true; \r\n    const fields:any = Object.keys(data);\r\n    fields.map((collection:any,key:any)=>{\r\n      \r\n      let el:any = document.getElementsByName(collection)\r\n\r\n      if (el[0]?.style) {\r\n        el[0].style.border = \"\"\r\n      }\r\n      if (el[0]?.required && !el[0]?.value ) {\r\n        el[0].style.border = \"1px solid red\"\r\n        validition = false\r\n      }else{\r\n\r\n        if (el[0]?.parentElement?.style) {\r\n          el[0].parentElement.style.border = \"\" \r\n        }\r\n\r\n        if (el[0]?.parentElement?.parentElement) {\r\n          el[0].parentElement.parentElement.style.border = \"\"\r\n        }\r\n        if (el[0]?.name === \"order_type\" && !data?.order_type ) {\r\n          validition = false\r\n          el[0].parentElement.parentElement.style.border = \"1px solid red\"\r\n        }\r\n        if (el[0]?.name === \"bo_account_id\" && !data.bo_account_id ) {\r\n          validition = false\r\n          el[0].parentElement.style.border = \"1px solid red\"\r\n        }\r\n        if (el[0]?.name === \"trading_market_id\" && !data.trading_market_id ) {\r\n          validition = false\r\n          el[0].parentElement.style.border = \"1px solid red\"\r\n        }\r\n        if (el[0]?.name === \"trade_company_id\" && !data.trade_company_id ) {\r\n          validition = false\r\n          el[0].parentElement.parentElement.style.border = \"1px solid red\"\r\n        }\r\n\r\n        if (el[0]?.name === \"transaction_type\" && !data.transaction_type ) {\r\n          validition = false\r\n          el[0].parentElement.parentElement.style.border = \"1px solid red\"\r\n        }\r\n\r\n      }\r\n    })\r\n\r\n    if ( validition ) {\r\n      event.stopPropagation();\r\n\r\n      try {\r\n\r\n        if (data.type ==\"Buy\") {\r\n          const datasCountry:any = await tradeBuy(data)\r\n          if (datasCountry.data.statusCode ===201) {\r\n\r\n            setSuccessData(datasCountry.data.transaction)\r\n            setsucessMsg(\"Order Buy Successfull\")\r\n          }\r\n        } else {\r\n          const datasCountry:any = await tradeSell(data)\r\n          if (datasCountry.data.statusCode ===201) {\r\n            setsucessMsg(\"Order Sell Successfull\")\r\n            setSuccessData(datasCountry.data.transaction)\r\n          }\r\n        }\r\n        \r\n      } catch (error:any) {\r\n        if (error.response.data.statusCode == 400) {\r\n          setresponseErr(error.response.data.message)\r\n          let fields:any = Object.keys(error.response.data.message)\r\n          setresponseErrFields(fields)\r\n        }\r\n      }\r\n\r\n      seterr(\"Please Select All requied Fields\")\r\n    }\r\n\r\n  }\r\n\r\n  const nidInput = async (e:any) => {\r\n    setData( { ...data, [e.target.name]: e.target.value })\r\n    SetcustomErrForMarket(\"\")\r\n\r\n    if (e.target.name === \"transaction_type\") {\r\n      if (e.target.value == \"market_rate\") {\r\n        let quantity:any = document.getElementById(\"order_qty\")\r\n        if (quantity.value) {\r\n          let rate = parseInt(quantity.value) * parseInt(trade_Details.last_trade_price) \r\n          if (rate || rate == 0) {\r\n            setData( { ...data,  [\"amount\"]: rate , [\"start_rate\"]: rate , [\"end_rate\"]: rate , [\"transaction_type\"] : e.target.value })\r\n          }else{\r\n            SetcustomErrForMarket(\"Select tradding company and Quantity first\")\r\n          }\r\n        }\r\n        \r\n      }else{\r\n        setData( { ...data, [\"start_rate\"]: \"\" , [\"end_rate\"]: \"\" , [\"amount\"]: \"\"  , [\"transaction_type\"] : e.target.value })\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const nidInputCustom = async (field_name:string,e:any) => {\r\n    setData( { ...data, [field_name]: e  })\r\n\r\n    if (field_name === \"trade_company_id\") {\r\n      const trades:any = await trade_details_info(e)\r\n\r\n      if (trades.data.statusCode ===200) {\r\n        settrade_Details(trades.data.trade_company)\r\n      }\r\n    }\r\n  }\r\n\r\n  const customType = async (e:any) => {\r\n\r\n    SetcustomErrForMarket(\"\")\r\n    if (e.target.name === \"fixed_rate\") {\r\n      let quantity:any = document.getElementById(\"order_qty\")\r\n      if (quantity.value) {\r\n        let rate = e.target.value\r\n        let amount = parseInt(quantity.value)* parseInt(rate)\r\n        setData( { ...data, [\"start_rate\"]: amount , [\"end_rate\"]: amount , [\"amount\"]: amount  })\r\n      }\r\n      \r\n    }  \r\n\r\n    if (e.target.name === \"order_qty\") {\r\n      let quantity:any = document.getElementById(\"fixed_rate\")\r\n\r\n      if (quantity) {\r\n        let rate = e.target.value\r\n        let amount = parseInt(quantity.value)* parseInt(rate)\r\n        setData( { ...data, [\"start_rate\"]: amount , [\"end_rate\"]: amount , [\"amount\"]: amount  })\r\n      }else{\r\n\r\n        if (data.transaction_type === \"market_rate\") {\r\n          let rate = parseInt(e.target.value) * parseInt(trade_Details.last_trade_price) \r\n\r\n          if (rate || rate == 0) {\r\n            setData( { ...data,  [\"amount\"]: rate , [\"start_rate\"]: rate , [\"end_rate\"]: rate })\r\n          }else{\r\n            SetcustomErrForMarket(\"Select tradding company first\")\r\n          }\r\n          \r\n        }else{\r\n\r\n          let el:any = document.getElementById(\"start_rate\")\r\n          let el_end:any = document.getElementById(\"end_rate\")\r\n          if (el || el_end) {\r\n            \r\n            let rate = e.target.value\r\n            let el:any = document.getElementById(\"start_rate\")\r\n            let start_rate = ( parseInt(el.value) * parseInt(rate) ) ? ( parseInt(el.value) * parseInt(rate) ) : \"\"\r\n            \r\n            let end_rate = (parseInt(el_end.value) * parseInt(rate) ) ? (parseInt(el_end.value) * parseInt(rate) ) : \"\"\r\n\r\n            setData( { ...data,  [\"amount\"]: start_rate , [\"start_rate\"]: start_rate , [\"end_rate\"]: end_rate })\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    if (e.target.name === \"start_rate\" || e.target.name === \"end_rate\" ) {\r\n      let quantity:any = document.getElementById(\"order_qty\")\r\n\r\n      if (quantity.value) {\r\n\r\n        let el:any = document.getElementById(\"start_rate\")\r\n        let el_end:any = document.getElementById(\"end_rate\")\r\n        if (el || el_end) {\r\n        \r\n          let rate = quantity.value\r\n          let start_rate = ( parseInt(el.value) * parseInt(rate) ) ? ( parseInt(el.value) * parseInt(rate) ) : \"\"\r\n          let end_rate = (parseInt(el_end.value) * parseInt(rate) ) ? (parseInt(el_end.value) * parseInt(rate) ) : \"\"\r\n          setData( { ...data,  [\"amount\"]: start_rate , [\"start_rate\"]: start_rate , [\"end_rate\"]: end_rate })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-8 order-right-side'>\r\n\r\n          <form onSubmit={handleSubmit} noValidate className='form'>\r\n            <div className='order-left-side-item'>\r\n\r\n              <div className='fw-bolder'><span style={{color:\"red\"}}>*</span>Order Type:</div>\r\n              <div className='order-left-side-item-radio-button-section'>\r\n                <div>\r\n                  <input type='radio' id='Regular' name='order_type' required value='Regular' onClick={(e):any=>{ nidInput(e);  }} />\r\n                  <label htmlFor='Regular'>Regular</label>\r\n                </div>\r\n\r\n                <div>\r\n                  <input type='radio' id='Advanced' name='order_type' required value='Advanced' onClick={(e):any=>{ nidInput(e); }} />\r\n                  <label htmlFor='Advanced'>Advanced</label>\r\n                </div>\r\n\r\n                {/* <div>\r\n                  <input type='radio' id='Algorithmic' name='order_type' required value='Algorithmic' onClick={(e):any=>{ nidInput(e); }} />\r\n                  <label htmlFor='Algorithmic'>Algorithmic</label>\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n\r\n            <div className='order-left-side-item'>\r\n              <div className='fw-bolder'><span style={{color:\"red\"}}>*</span>BO Account:</div>\r\n              <div>\r\n                <Select onChange={(e:any) => {  nidInputCustom(\"bo_account_id\", e.value ); } } name=\"bo_account_id\" className=\"custom_required\" options={BoData} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='order-left-side-item'>\r\n              <div className='fw-bolder'><span style={{color:\"red\"}}>*</span>Type:</div>\r\n              <div>\r\n                <select className=\"form-select\" aria-label=\"Select example\"  name='type' required onClick={(e):any=>{ nidInput(e); }} >\r\n                  <option value=\"Sell\">Sell</option>\r\n                  <option value=\"Buy\">Buy</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='order-left-side-item'>\r\n              <div className='fw-bolder'><span style={{color:\"red\"}}>*</span>Stock Exchange:</div>\r\n              <div>\r\n                <select className=\"form-select\" aria-label=\"Select example\"  name='trading_market_id' required onChange={(e):any=>{ nidInput(e); }} >\r\n                  <option value=\"\">Please select</option>\r\n                  <option value=\"1\">DSE</option>\r\n                  <option value=\"2\">CSE</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='order-left-side-item'>\r\n              <div className='fw-bolder'><span style={{color:\"red\"}}>*</span>Trading Company:</div>\r\n              <div>\r\n                <Select onChange={(e:any) => {  nidInputCustom(\"trade_company_id\", e.value ); } } name=\"trade_company_id\" className=\"custom_required\" options={trade_list} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='order-left-side-item'>\r\n              <div className='fw-bolder'><span style={{color:\"red\"}}>*</span>Quantity:</div>\r\n              <div className='order-left-quantity-row'>\r\n                <input type='number' name='order_qty' required id='order_qty' defaultValue={data.order_qty} onChange={(e):any=>{ nidInput(e); customType(e); }} />\r\n                <div className='drip-quantity'>\r\n                  <div className='me-5'>Drip Quantity:</div>\r\n                  <input type='number' name='drip_qty' onChange={(e):any=>{ nidInput(e); }} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='order-left-side-item'>\r\n              <div></div>\r\n              <div className='order-left-amount'>\r\n                <div>Amount:</div>\r\n                <input type='number' name='amount' id='amount' required defaultValue={data.amount} onChange={(e):any=>{ nidInput(e); }} readOnly />\r\n                \r\n              </div>\r\n            </div>\r\n\r\n            <div className='order-left-side-item'>\r\n              <div></div>\r\n              <div className='order-left-parchase-power'>\r\n                <div>Parchase Power:</div>\r\n                <input type='text' />\r\n              </div>\r\n            </div>\r\n\r\n            {/* <div className=\"button-bar\">\r\n              <button type='button' onClick={() => setProgress(\"0%\")}>0%</button>\r\n              <button type='button' onClick={() => setProgress(\"25%\")}>25%</button>\r\n              <button type='button' onClick={() => setProgress(\"50%\")}>50%</button>\r\n              <button type='button' onClick={() => setProgress(\"75%\")}>75%</button>\r\n              <button type='button' onClick={() => setProgress(\"100%\")}>100%</button>\r\n            </div>\r\n\r\n            <div className='order-left-side-item'>\r\n              <div></div>\r\n              <div className='order-left-parchase-power'>\r\n              <div className=\"meter\" onMouseDown={(e:any)=> ProgressBar(e) } >\r\n                <animated.span style={props} />\r\n              </div>\r\n              </div>\r\n            </div> */}\r\n            \r\n\r\n            <div className='order-left-side-item'>\r\n              <div className='fw-bolder'><span style={{color:\"red\"}}>*</span> Pricing Type:</div>\r\n              <div className='order-left-pricing'>\r\n                <div>\r\n                  <input type='radio' id='Fixed' name='transaction_type' required value='fixed' onClick={(e):any=>{ nidInput(e); }}/>\r\n                  <label htmlFor='Fixed'>Fixed</label>\r\n                </div>\r\n\r\n                <div>\r\n                  <input type='radio' id='Range' name='transaction_type' required value='range' onClick={(e):any=>{ nidInput(e); }}/>\r\n                  <label htmlFor='Range'>Range</label>\r\n                </div>\r\n\r\n                <div>\r\n                  <input type='radio' id='Market Rate' name='transaction_type' required value='market_rate' onClick={(e):any=>{ nidInput(e); }} />\r\n                  <label htmlFor='Market Rate'>Market Rate</label>\r\n                </div>\r\n                <a href='#' className='btn btn-primary'>\r\n                  Market Depth\r\n                </a>\r\n              </div>\r\n            </div>\r\n\r\n\r\n            {\r\n              (  data.transaction_type === \"fixed\" ) && \r\n            \r\n            <>\r\n            <div className='order-left-side-item'>\r\n              <div className='fw-bolder'> Fixed Rate:</div>\r\n              <input type='number' name='fixed_rate' id='fixed_rate' onChange={(e):any=>{ customType(e); }}  />\r\n            </div>\r\n            </>\r\n\r\n            }\r\n\r\n            {\r\n              (  data.transaction_type === \"range\" ) && \r\n            \r\n            <>\r\n            <div className='order-left-side-item'>\r\n              <div className='fw-bolder'>Start Rate:</div>\r\n              <input type='text' name='start_rate' id='start_rate' defaultValue={data.start_rate} onChange={(e):any=>{ nidInput(e); customType(e); }}  />\r\n            </div>\r\n\r\n            <div className='order-left-side-item'>\r\n              <div className='fw-bolder'>End Rate:</div>\r\n              <input type='text' name='end_rate' id='end_rate' defaultValue={data.end_rate} onChange={(e):any=>{ nidInput(e); customType(e); }} />\r\n            </div>\r\n\r\n            \r\n            </>\r\n\r\n            }\r\n\r\n            {\r\n              (  data.order_type !== \"Regular\" ) && \r\n            \r\n            <div className='order-left-side-item'>\r\n              <div className='fw-bolder'>Order Valid From:</div>\r\n              <div className='order-left-side-valid-from'>\r\n                <div>\r\n                  <DatePicker selected={data.order_valid_from}  onChange={(date: any) => nidInputCustom(\"order_valid_from\", date) } name=\"order_valid_from\" />\r\n                </div>\r\n                <div className='d-flex align-items-center'>\r\n                  <div className='me-5'>Order Valid To:</div>\r\n                  <DatePicker selected={data.order_valid_to} onChange={(date: any) => nidInputCustom(\"order_valid_to\", date) } name=\"order_valid_to\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            }\r\n\r\n            <div className='order-left-side-item'>\r\n              <div className='fw-bolder'>Customer Note:</div>\r\n              <textarea name='customer_note' onChange={(e):any=>{ nidInput(e); }}>\r\n\r\n              </textarea>\r\n            </div>\r\n\r\n            <p style={{ color:\"red\" }} > { customErrForMarket } </p>\r\n\r\n            {\r\n              responseErrFields.length >0 &&\r\n            \r\n\r\n            <div className='row mb-6'>\r\n              <div className='col-lg-12 fv-row'>\r\n                <div className=\"mb-10\">\r\n                  All Errors\r\n\r\n                  <div className=\"row\">\r\n                    {\r\n                      responseErrFields.map((collection:any,key:any)=>\r\n                      \r\n                      <ul key={key}>\r\n                        {\r\n                          collection?.toUpperCase().replaceAll(\"_\" , \" \")\r\n                        }\r\n                        <ul>\r\n\r\n                        {\r\n                          responseErr[collection].map((collection_2:any , key_2:any)=>\r\n                          <li key={key_2} style={{color:\"red\"}}> {collection_2.replaceAll(\"_\" , \" \")} </li>\r\n                          )\r\n                        }\r\n                        </ul>\r\n                      </ul>\r\n                      \r\n                      )\r\n                    }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            }\r\n\r\n            <div className='order-left-side-item'>\r\n              <div className='order-left-pricing'>\r\n                <button className='btn btn-primary'>\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n\r\n        </div>\r\n\r\n        \r\n        <div className='col-md-4 order-right'>\r\n          <ul className='border border-dark rounded m-0 p-3'>\r\n            <li className='d-flex align-items-center justify-content-between mb-2'>\r\n              <div className='fw-bolder'>Category:</div>\r\n              <div>{  trade_Details.category }</div>\r\n            </li>\r\n            <li className='d-flex align-items-center justify-content-between mb-2'>\r\n              <div className='fw-bolder'>Last Trade Date:</div>\r\n              <div>02-sep-2021</div>\r\n            </li>\r\n            <li className='d-flex align-items-center justify-content-between mb-2'>\r\n              <div className='fw-bolder'>Last Trade Price:</div>\r\n              <div>{  trade_Details.last_trade_price } </div>\r\n            </li>\r\n            <li className='d-flex align-items-center justify-content-between mb-2'>\r\n              <div className='fw-bolder'>Low - Hight:</div>\r\n              <div>{  trade_Details.close_price } - {  trade_Details.high_price } </div>\r\n            </li>\r\n            <li className='d-flex align-items-center justify-content-between mb-2'>\r\n              <div className='fw-bolder'>Matured Share:</div>\r\n              <div>{  trade_Details.matured_share }</div>\r\n            </li>\r\n            <li className='d-flex align-items-center justify-content-between mb-2'>\r\n              <div className='fw-bolder'>Saleable:</div>\r\n              <div>1340</div>\r\n            </li>\r\n            <li className='d-flex align-items-center justify-content-between mb-2'>\r\n              <div className='fw-bolder'>Commission:</div>\r\n              <div>0.00TK</div>\r\n            </li>\r\n            <li className='d-flex align-items-center justify-content-between mb-2'>\r\n              <div className='fw-bolder'>Actual Balance:</div>\r\n              <div>106,231.57TK</div>\r\n            </li>\r\n          </ul>\r\n          <div className='d-flex align-items-center justify-content-between mt-2 p-3 border border-dark rounded'>\r\n            <div className='fw-bolder'>Actual Balance:</div>\r\n            <div>106,231.57TK</div>\r\n          </div>\r\n\r\n          <div className='mt-5'>\r\n            <TimePicker onChange={onChange} value={value} />\r\n            <a href='#' className='btn btn-primary ms-5'>\r\n              Market Open\r\n            </a>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        {\r\n              sucessMsg &&\r\n              <>\r\n              <p style={{color:\"green\"}}>{sucessMsg}</p>\r\n\r\n              <table className=\"table table-hover table-rounded table-striped border gy-7 gs-7\">\r\n                  <thead>\r\n                      <tr className=\"fw-bold fs-6 text-gray-800 border-bottom-2 border-gray-200\">\r\n                          <th>BO Account</th>\r\n                          <th>Order Type</th>\r\n                          <th>Trade Type</th>\r\n                          <th>Stock Exchange</th>\r\n                          <th>Tradding Code</th>\r\n                          <th>Amount</th>\r\n                          <th>Pricing Type</th>\r\n                          <th>Start Rate</th>\r\n                          <th>End Rate</th>\r\n                          <th>Note</th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                      <tr>\r\n                          <th>{ SuccessData.bo_account_id }</th>\r\n                          <th>{ SuccessData.order_type }</th>\r\n                          <th>{ SuccessData.type }</th>\r\n                          <th>{ SuccessData.trading_market_id }</th>\r\n                          <th>{ SuccessData.trade_company_id }</th>\r\n                          <th>{ SuccessData.amount }</th>\r\n                          <th>{ SuccessData.transaction_type } </th>\r\n                          <th>{ SuccessData.start_rate }</th>\r\n                          <th>{ SuccessData.end_rate }</th>\r\n                          <th>{ SuccessData.customer_note }</th>\r\n                      </tr>\r\n                  </tbody>\r\n                </table>\r\n              </>\r\n            }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import {useLayoutEffect, useState} from 'react'\r\nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  UserTradeList,\r\n} from '../../auth/core/_requests'\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nconst { SearchBar } = Search;\r\n\r\nexport function UserTrades() {\r\n  const [data, setData] = useState<any>([])\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const BoLists:any = await UserTradeList(1)\r\n      if (BoLists.data.statusCode ===200) {\r\n        setData(BoLists.data.trades )\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  const columns = [\r\n  {\r\n    dataField: 'order_id',\r\n    text: 'Order ID',\r\n    sort: true\r\n  }, {\r\n    dataField: 'order_date',\r\n    text: 'Order Date',\r\n    formatter: (value:any,row:any,id:any)=>{\r\n      if (value) {\r\n        return value.replaceAll(\"T18:00:00.000Z\" ,\"\")\r\n      }\r\n      \r\n    },\r\n    sort: true\r\n  }, {\r\n    dataField: 'bo_account',\r\n    text: 'Bo Code',\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: 'type',\r\n    text: 'Type',\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: 'market_name',\r\n    text: 'SE',\r\n    // formatter: (value:any,row:any,id:any)=>{\r\n    //   if (value) {\r\n    //     return value.replaceAll(\"T18:00:00.000Z\" ,\"\")\r\n    //   }\r\n      \r\n    // },\r\n    sort: true\r\n  },\r\n\r\n   {\r\n    dataField: 'tradecode',\r\n    text: 'Trading Code',\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: 'order_qty',\r\n    text: 'Order Qty',\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: 'price',\r\n    text: 'Pricing',\r\n    sort: true\r\n  }, {\r\n    dataField: 'fixed_rate',\r\n    text: 'Fixed Rate',\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: 'start_rate',\r\n    text: 'Start Rate',\r\n    sort: true\r\n  }, {\r\n    dataField: 'end_rate',\r\n    text: 'End Rate',\r\n    sort: true\r\n  }, {\r\n    dataField: 'final_rate',\r\n    text: 'Final Rate',\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: 'status',\r\n    text: 'Status',\r\n    sort: true\r\n  }, {\r\n    dataField: 'commission',\r\n    text: 'Commission',\r\n    sort: true\r\n  }, {\r\n    dataField: 'amount',\r\n    text: 'Amount',\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: 'customer_note',\r\n    text: 'Customer Note',\r\n    sort: true\r\n  }\r\n  ];\r\n\r\n  useLayoutEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12 order-right-side'>\r\n\r\n\r\n        <ToolkitProvider\r\n          keyField=\"trade_company_id\"\r\n          data={ data }\r\n          columns={ columns }\r\n          search\r\n          \r\n        >\r\n          {\r\n            (props: { searchProps: any; baseProps: any; }) => (\r\n              <div>\r\n                <SearchBar { ...props.searchProps } />\r\n                <hr />\r\n                <BootstrapTable\r\n                noDataIndication=\"Table is Empty\"\r\n                bootstrap4 \r\n                striped\r\n                hover\r\n                pagination={ paginationFactory({}) } \r\n                  { ...props.baseProps }\r\n                />\r\n              </div>\r\n            )\r\n          }\r\n        </ToolkitProvider>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import {Navigate, Outlet, Route, Routes} from 'react-router-dom'\r\nimport {PageLink, PageTitle} from '../../../_metronic/layout/core' \r\nimport {NewOrder} from './components/NewOrder'\r\nimport {UserTrades} from './components/UserTrades'\r\n\r\nconst profileBreadCrumbs: Array<PageLink> = [\r\n  {\r\n    title: 'Order',\r\n    path: '/order/buy',\r\n    isSeparator: false,\r\n    isActive: false,\r\n  },\r\n  {\r\n    title: '',\r\n    path: '',\r\n    isSeparator: true,\r\n    isActive: false,\r\n  },\r\n]\r\n\r\nconst Order = () => (\r\n  <Routes>\r\n    <Route\r\n      element={\r\n        <>\r\n          <Outlet />\r\n        </>\r\n      }\r\n    >\r\n      <Route\r\n        path='buy'\r\n        element={\r\n          <>\r\n            <PageTitle breadcrumbs={profileBreadCrumbs}>Order Buy & Sell </PageTitle>\r\n            <NewOrder />\r\n          </>\r\n        }\r\n      />\r\n\r\n      <Route\r\n        path='trades'\r\n        element={\r\n          <>\r\n            <PageTitle breadcrumbs={profileBreadCrumbs}>User Trades </PageTitle>\r\n            <UserTrades />\r\n          </>\r\n        }\r\n      />\r\n\r\n      <Route index element={<Navigate to='/order/buy' />} />\r\n    </Route>\r\n  </Routes>\r\n)\r\n\r\nexport default Order\r\n"],"sourceRoot":""}